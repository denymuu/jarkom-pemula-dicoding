[Catatan: saya menggunakan NGINX untuk Web Server]
dens@Dens:~$ sudo apt update
dens@Dens:~$ git clone https://github.com/dicodingacademy/a387-jarkom-labs.git
dens@Dens:~$ wget https://nodejs.org/dist/v16.13.2/node-v16.13.2-linux-x64.tar.xz
dens@Dens:~$ tar -xf node-v16.13.2-linux-x64.tar.xz
dens@Dens:~$ ls
dens@Dens:~$ rm node-v16.13.2-linux-x64.tar.xz
dens@Dens:~$ cd node-v16.13.2-linux-x64/
dens@Dens:~/node-v16.13.2-linux-x64$ rm CHANGELOG.md
dens@Dens:~/node-v16.13.2-linux-x64$ rm LICENSE
dens@Dens:~/node-v16.13.2-linux-x64$ rm readme.md
dens@Dens:~/node-v16.13.2-linux-x64$ ls
dens@Dens:~/node-v16.13.2-linux-x64$ sudo cp -r ./* /usr/local/ 
dens@Dens:~/node-v16.13.2-linux-x64$ npm --version
dens@Dens:~/node-v16.13.2-linux-x64$ node --version
dens@Dens:~/node-v16.13.2-linux-x64$ cd ..
dens@Dens:~$ cd a387-jarkom-labs/
dens@Dens:~/a387-jarkom-labs$ npm install
dens@Dens:~/a387-jarkom-labs$ ls
dens@Dens:~/a387-jarkom-labs$ npm run start
dens@Dens:~/a387-jarkom-labs$ sudo nano app.js
dens@Dens:~/a387-jarkom-labs$ cat app.js

'use strict'

const express = require('express')

const PORT = 8000
const HOST = '0.0.0.0'

const app = express()
app.get('/', (req, res) => {
    res.send('Hello Deny Muhammad!\n')
})

app.listen(PORT, HOST)
console.log(`Running on http://${HOST}:${PORT}`)

dens@Dens:~/a387-jarkom-labs$ sudo apt-get install nginx -y
dens@Dens:~/a387-jarkom-labs$ sudo service nginx status
dens@Dens:~/a387-jarkom-labs$ sudo nano /etc/nginx/sites-available/default
dens@Dens:~/a387-jarkom-labs$ cat /etc/nginx/sites-available/default
##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
limit_req_zone $binary_remote_addr zone=one:10m rate=30r/m;
server {
        listen 3000 default_server;
        listen [::]:3000 default_server;

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        server_name _;

        location / {
         proxy_pass http://localhost:8000;
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection 'upgrade';
         proxy_set_header Host $host;
         proxy_cache_bypass $http_upgrade;

         limit_req zone=one;
        }

        # pass PHP scripts to FastCGI server
        #
        #location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
        #       fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#       listen 80;
#       listen [::]:80;
#
#       server_name example.com;
#
#       root /var/www/example.com;
#       index index.html;
#
#       location / {
#               try_files $uri $uri/ =404;
#       }
#}
dens@Dens:~/a387-jarkom-labs$ sudo service nginx restart
dens@Dens:~/a387-jarkom-labs$ sudo service nginx status
dens@Dens:~/a387-jarkom-labs$ npm run start
> nodeapp@1.0.0 start
> node app.js

Running on http://0.0.0.0:8000



